generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  phone     String?
  photo     String?
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[] @relation("CourseToUser")

  @@map("users")
}

model Course {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  image       String
  overview    String
  assessment  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  modules     Module[]
  users       User[]   @relation("CourseToUser")

  @@map("courses")
}

model Module {
  id          String    @id @default(uuid())
  title       String
  description String
  courseId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  chapters    Chapter[]
  course      Course    @relation(fields: [courseId], references: [id])

  @@map("modules")
}

model Chapter {
  id          String    @id @default(uuid())
  title       String
  description String
  moduleId    String
  quizId      String?   @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  module      Module    @relation(fields: [moduleId], references: [id])
  sections    Section[]
  quizzes    Quiz[]

  @@map("chapters")
}

model Section {
  id          String   @id @default(uuid())
  title       String
  description String
  chapterId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  chapter     Chapter  @relation(fields: [chapterId], references: [id])

  @@map("sections")
}

model UserCourseProgress {
  id        String   @id @default(uuid())
  userId    String
  courseId  String
  chapterId String
  sectionId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, courseId])
}

model Quiz {
  id        String   @id @default(uuid())
  question  String   @unique
  options   String[]
  answer    String
  chapterId String?
  chapter     Chapter?  @relation(fields: [chapterId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("quizzes")
}

enum Role {
  admin
  user
}
