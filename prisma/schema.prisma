// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  email     String   @unique
  phone     String?
  photo     String?
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]
}

model Course {
  id          String   @id @default(uuid())
  title       String   @unique
  description String
  image       String
  overview    String
  assessment  String
  modules     Module[]
  users       User[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}



model Module {
  id          String    @id @default(uuid())
  title       String
  description String
  courseId    String
  course      Course    @relation(fields: [courseId], references: [id])
  chapters    Chapter[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chapter {
  id          String    @id @default(uuid())
  title       String
  description String
  moduleId    String
  module      Module    @relation(fields: [moduleId], references: [id])
  sections    Section[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Section {
  id          String  @id @default(uuid())
  title       String
  description String
  chapterId   String
  chapter     Chapter @relation(fields: [chapterId], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model UserCourseProgress {
  id           String   @id @default(uuid())
  userId       String
  courseId     String
  progress     Float    // This could represent percentage completed
  completed    Boolean  // Optional: Indicates if the course is completed
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, courseId])
}

model Quiz {
  id        String   @id @default(uuid())
  question  String   @unique
  options   String[]
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}